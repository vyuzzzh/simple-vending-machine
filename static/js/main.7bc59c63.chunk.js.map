{"version":3,"sources":["components/ProductStorage/ProductStorage.js","components/InputMoney/InputMoney.js","components/ProductPurchase/ProductPurchase.js","components/Surrender/Surrender.js","components/Purchase/Purchase.js","components/Issuing/Issuing.js","utils/Helper.js","components/PaymentDevice/PaymentDevice.js","containers/VendingMachine/VendingMachine.js","actions/actions.js","actions/action-types.js","components/App/App.js","serviceWorker.js","reducers/changeReducer.js","reducers/root-reducer.js","store/store.js","index.js"],"names":["ProductStorage","products","className","map","product","available","count","key","name","brand","price","id","InputMoney","forwardRef","ref","handleChange","onSubmit","htmlFor","autoComplete","type","placeholder","pattern","title","required","ProductPurchase","filter","join","Surrender","balance","Purchase","purchaseProduct","giveSurrender","setPurchaseProduct","onClick","inputMoney","document","querySelector","inputProduct","classList","remove","handleClick","role","tabIndex","Issuing","getAvailableProduct","deposit","1","2","5","10","forEach","val","PaymentDevice","setDeposit","quantityChange","useRef","event","preventDefault","current","value","add","focus","purchase","makingPurchase","purchaseGoods","modifiedProducts","blur","connect","state","changeReducer","dispatch","props","App","Boolean","window","location","hostname","match","initialState","combineReducers","action","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","trace","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7bc59c63.chunk.js","sourcesContent":["import React from 'react';\n\nconst ProductStorage = ({ products }) => (\n  <div className=\"product-storage\">\n    {\n        products.map((product) => (\n          <div\n            className={`product ${(product.available && product.count) ? 'available' : ''}`}\n            key={product.name + product.brand}\n          >\n            <span className=\"brand\">{product.brand}</span>\n            <span>{product.name}</span>\n            <span className=\"price\">\n              Price:\n              {product.price}\n              {' '}\n              R.\n            </span>\n            <span>{product.count ? `Residue: ${product.count}` : 'The goods are over.'}</span>\n            <span className=\"id\">\n              Id:\n              {product.id}\n            </span>\n          </div>\n        ))\n      }\n  </div>\n);\n\nexport default ProductStorage;\n","import React, { forwardRef } from 'react';\n\nconst InputMoney = forwardRef(({\n  handleChange\n}, ref) => (\n  <div className=\"money\">\n    <form onSubmit={handleChange} className=\"form\">\n      <label htmlFor=\"input-money\" className=\"deposit\">\n        Insert money\n        <br />\n        <input\n          ref={ref}\n          autoComplete=\"off\"\n          className=\"input-money\"\n          name=\"input-money\"\n          type=\"text\"\n          placeholder=\"take your money\"\n          pattern=\"50|100|200|500|1000\"\n          title=\"Available banknotes: 50, 100, 200, 500, or 1000 R.\"\n          required\n        />\n      </label>\n      <span>\n        Available banknotes:\n        <br />\n        50, 100, 200, 500 or 1000 R.\n        <br />\n        The machine gives change\n        <br />\n        in 1, 2, 5 and 10 R coins.\n      </span>\n    </form>\n  </div>\n));\n\nexport default InputMoney;\n","import React, { forwardRef } from 'react';\n\nconst ProductPurchase = forwardRef(({\n  products, handleChange\n}, ref) => {\n  const pattern = products\n    .filter((product) => product.available && product.count)\n    .map((product) => product.id).join('|');\n\n  return (\n    <div className=\"input-product\">\n      <form className=\"form\" onSubmit={handleChange}>\n        <label htmlFor=\"product-id\" className=\"cash\">\n          Enter product id\n          <br />\n          <input\n            ref={ref}\n            autoComplete=\"off\"\n            className=\"product-id\"\n            name=\"product-id\"\n            type=\"text\"\n            placeholder=\"enter id\"\n            pattern={pattern}\n            title=\"This product is not available. Please choose another one.\"\n            required\n          />\n        </label>\n      </form>\n    </div>\n  );\n});\n\nexport default ProductPurchase;\n","import React from 'react';\n\nconst Surrender = ({\n  balance\n}) => (\n  <div className=\"surrender\">\n    <span>{balance[10] ? `10R: ${balance[10]} coins` : ''}</span>\n    <span>{balance[5] ? `5R: ${balance[5]} coins` : ''}</span>\n    <span>{balance[2] ? `2R: ${balance[2]} coins` : ''}</span>\n    <span>{balance[1] ? `1R: ${balance[1]} coins` : ''}</span>\n  </div>\n);\n\nexport default Surrender;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\n\nimport './Purchase.scss';\n\nconst Purchase = ({\n  purchaseProduct, giveSurrender, setPurchaseProduct\n}) => {\n  const handleClick = () => {\n    giveSurrender();\n    setPurchaseProduct({});\n    const inputMoney = document.querySelector('.input-money');\n    const inputProduct = document.querySelector('.product-id');\n    inputMoney.classList.remove('disabled');\n    inputProduct.classList.remove('disabled');\n  };\n\n  return (\n    <div className=\"purchase\">\n      <div\n        className={`${purchaseProduct.brand ? 'purchase-product' : ''}`}\n        onClick={() => handleClick()}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <span>{purchaseProduct.brand}</span>\n        <span>{purchaseProduct.name}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Purchase;\n","import React from 'react';\n\nimport Surrender from '../Surrender/Surrender';\nimport Purchase from '../Purchase/Purchase';\nimport './Issuing.scss';\n\nconst Issuing = ({\n  purchaseProduct, balance, giveSurrender, setPurchaseProduct\n}) => (\n  <div className=\"issuing\">\n    <Surrender\n      balance={balance}\n    />\n    <Purchase\n      purchaseProduct={purchaseProduct}\n      giveSurrender={giveSurrender}\n      setPurchaseProduct={setPurchaseProduct}\n    />\n  </div>\n);\n\nexport default Issuing;\n","export const makingPurchase = (products, id) => {\n  const purchase = {\n    products: []\n  };\n  purchase.products = products.map((product) => {\n    if (product.id === id) {\n      product.count -= 1;\n      purchase.purchaseProduct = product;\n    }\n    return product;\n  });\n  return purchase;\n};\n\nexport const getAvailableProduct = (products = [], deposit) => products.map((product) => {\n  if (product.price <= deposit) {\n    product.available = true;\n  } else {\n    product.available = false;\n  }\n  return product;\n});\n\nexport const giveSurrender = (deposit) => {\n  if (deposit) {\n    const balance = {\n      1: 0,\n      2: 0,\n      5: 0,\n      10: 0\n    };\n    const valArr = [10, 5, 2, 1];\n    valArr.forEach((val) => {\n      while (deposit >= val) {\n        deposit -= val;\n        balance[val] += 1;\n      }\n    });\n    return balance;\n  }\n};\n","import React, { useRef } from 'react';\n\nimport InputMoney from '../InputMoney/InputMoney';\nimport ProductPurchase from '../ProductPurchase/ProductPurchase';\nimport Issuing from '../Issuing/Issuing';\nimport { makingPurchase } from '../../utils/Helper';\nimport './PaymentDevice.scss';\n\nconst PaymentDevice = ({\n  deposit,\n  setDeposit,\n  products,\n  quantityChange,\n  setPurchaseProduct,\n  purchaseProduct,\n  balance,\n  giveSurrender\n}) => {\n  const inputMoney = useRef(null);\n  const inputProduct = useRef(null);\n\n  const handleChangeMoney = (event) => {\n    event.preventDefault();\n    const { current, current: { value } } = inputMoney;\n    setDeposit(+value);\n    current.classList.add('disabled');\n    current.value = '';\n    inputProduct.current.focus();\n  };\n\n  const handleChangeProduct = (event) => {\n    event.preventDefault();\n    const {\n      current,\n      current: { value: id }\n    } = inputProduct;\n    const purchase = makingPurchase(products, +id);\n    const {\n      purchaseProduct: purchaseGoods,\n      purchaseProduct: { price },\n      products: modifiedProducts\n    } = purchase;\n    current.value = '';\n    current.classList.add('disabled');\n    current.blur();\n    setPurchaseProduct(purchaseGoods);\n    quantityChange(modifiedProducts);\n    giveSurrender(deposit - price);\n    setDeposit(0);\n  };\n\n  return (\n    <div className=\"payment-device\">\n      <span className=\"deposit-view\">\n        Your deposit:\n        {` ${deposit} `}\n        R.\n      </span>\n      <InputMoney\n        ref={inputMoney}\n        handleChange={handleChangeMoney}\n      />\n      <ProductPurchase\n        ref={inputProduct}\n        products={products}\n        handleChange={handleChangeProduct}\n      />\n      <Issuing\n        purchaseProduct={purchaseProduct}\n        balance={balance}\n        giveSurrender={giveSurrender}\n        setPurchaseProduct={setPurchaseProduct}\n      />\n    </div>\n  );\n};\n\nexport default PaymentDevice;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  quantityChange,\n  setDeposit,\n  setPurchaseProduct,\n  giveSurrender\n} from '../../actions/actions';\nimport ProductStorage from '../../components/ProductStorage/ProductStorage';\nimport PaymentDevice from '../../components/PaymentDevice/PaymentDevice';\nimport './VendingMachine.scss';\n\nconst VendingMachine = (props) => {\n  const {\n    products, deposit, purchaseProduct, balance\n  } = props;\n\n  return (\n    <div className=\"vending-machine\">\n      <ProductStorage products={products} />\n      <PaymentDevice\n        deposit={deposit}\n        setDeposit={props.setDeposit}\n        quantityChange={props.quantityChange}\n        setPurchaseProduct={props.setPurchaseProduct}\n        purchaseProduct={purchaseProduct}\n        products={products}\n        balance={balance}\n        giveSurrender={props.giveSurrender}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  products: state.changeReducer.products,\n  deposit: state.changeReducer.deposit,\n  balance: state.changeReducer.balance,\n  purchaseProduct: state.changeReducer.purchaseProduct\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  quantityChange: (products) => dispatch(quantityChange(products)),\n  setDeposit: (deposit) => dispatch(setDeposit(deposit)),\n  giveSurrender: (deposit) => dispatch(giveSurrender(deposit)),\n  setPurchaseProduct: (purchaseProduct) => dispatch(setPurchaseProduct(purchaseProduct))\n});\n\nVendingMachine.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deposit: PropTypes.number.isRequired,\n  purchaseProduct: PropTypes.object.isRequired,\n  balance: PropTypes.object.isRequired,\n  giveSurrender: PropTypes.func.isRequired,\n  setDeposit: PropTypes.func.isRequired,\n  quantityChange: PropTypes.func.isRequired,\n  setPurchaseProduct: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VendingMachine);\n","import {\n  PRODUCT_CHANGE,\n  SET_DEPOSIT,\n  SET_PURCHASE_PRODUCT,\n  GIVE_SURRENDER\n} from './action-types';\n\nexport const quantityChange = (products) => ({\n  type: PRODUCT_CHANGE,\n  products\n});\n\nexport const setDeposit = (deposit) => ({\n  type: SET_DEPOSIT,\n  deposit\n});\n\nexport const setPurchaseProduct = (purchaseProduct) => ({\n  type: SET_PURCHASE_PRODUCT,\n  purchaseProduct\n});\n\nexport const giveSurrender = (deposit) => ({\n  type: GIVE_SURRENDER,\n  deposit\n});\n","export const PRODUCT_CHANGE = 'PRODUCT_CHANGE';\nexport const SET_DEPOSIT = 'SET_DEPOSIT';\nexport const SET_PURCHASE_PRODUCT = 'SET_PURCHASE_PRODUCT';\nexport const GIVE_SURRENDER = 'GIVE_SURRENDER';\n","import React from 'react';\n\nimport './App.scss';\nimport VendingMachine from '../../containers/VendingMachine/VendingMachine';\n\nconst App = () => (\n  <div className=\"app\">\n    <VendingMachine />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  PRODUCT_CHANGE, SET_DEPOSIT, SET_PURCHASE_PRODUCT, GIVE_SURRENDER\n} from '../actions/action-types';\nimport { getAvailableProduct, giveSurrender } from '../utils/Helper';\n\nconst initialState = {\n  products: [\n    {\n      name: 'Banana',\n      brand: 'Ecuador',\n      price: 150,\n      count: 2,\n      id: 1,\n      available: false\n    },\n    {\n      name: 'Energy bars',\n      brand: 'Sport',\n      price: 782,\n      count: 5,\n      id: 2,\n      available: false\n    },\n    {\n      name: 'Сhocolate',\n      brand: 'Snickers',\n      price: 46,\n      count: 10,\n      id: 3,\n      available: false\n    },\n    {\n      name: 'Soda',\n      brand: 'Coca-cola',\n      price: 85,\n      count: 6,\n      id: 4,\n      available: false\n    },\n    {\n      name: 'Chips',\n      brand: 'Lays',\n      price: 54,\n      count: 7,\n      id: 5,\n      available: false\n    },\n    {\n      name: 'Сhocolate',\n      brand: 'Nesquik',\n      price: 92,\n      count: 10,\n      id: 6,\n      available: false\n    },\n    {\n      name: 'Coffee',\n      brand: 'Starbuks',\n      price: 177,\n      count: 50,\n      id: 7,\n      available: false\n    }\n  ],\n  deposit: 0,\n  purchaseProduct: {},\n  balance: {}\n};\n\nexport default (state = initialState, action) => {\n  const {\n    products, deposit, purchaseProduct\n  } = action;\n\n  switch (action.type) {\n    case PRODUCT_CHANGE:\n      return {\n        ...state,\n        products\n      };\n    case SET_DEPOSIT:\n      return {\n        ...state,\n        products: getAvailableProduct(state.products, deposit),\n        deposit\n      };\n    case SET_PURCHASE_PRODUCT:\n      return {\n        ...state,\n        purchaseProduct\n      };\n    case GIVE_SURRENDER:\n      return {\n        ...state,\n        balance: deposit ? giveSurrender(deposit) : {}\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport changeReducer from './changeReducer';\n\nexport default combineReducers({\n  changeReducer\n});\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers/root-reducer';\n\nconst store = createStore(\n  rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({ trace: true }),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}